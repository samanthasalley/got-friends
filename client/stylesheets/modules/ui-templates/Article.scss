@import '../../shared/utils/all';

%article {
  display: grid;
}

/* ==== SIDE BY SIDE SPECIFIC STYLES ==== */
.sideBySide {
  @extend %article;
  // grid-template-columns: 1fr 3fr;
  grid-template-columns: repeat(12, 1fr);
  grid-column-gap: 2rem;
  text-align: left;
  background-color: #fff;

  @include respond(phone) { // width < 600?
    display: flex;
    flex-direction: column;
    text-align: center;
  }

  &:hover .left .overlay{
    background-color: rgba(color(text), 0.7);
  }

  &:hover .left .overlay button{
    opacity: 1;
  }
}

// LEFT STYLES

.rounded {
  border-radius: 50%;
}

//RIGHT STYLES

// Default styles for left sides of articles
.right {
  // right styles
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;

  @include respond(phone) { // width < 600?
    align-items: center;
  }

  p:not(:last-child) {
    margin:  0 0 1rem 0;
  }
  
  p {
    margin-top: 0;
  }

  p:last-of-type {
    margin-bottom: 0;
  }

}
//LEFT STYLES

// Default styles for left side of articles
.left {
  display: flex;
  flex-direction: column;
  justify-content: center;

  p {
    margin:  0 0 1rem 0;
  }

  @include respond(phone) { // width < 600?
    align-items: center;
  }
}

///////////////////////////
// TOP BOTTOM SPECIFIC STYLES
//////////////////////////

.topBottom {
  // display: flex;
  flex-direction: column;
  border: 1px solid color(text);
  background-color: #fff;
  width: 100%;

  @include respond(phone) { // width < 600?
    // width: 100%;
    margin-bottom: 2rem;
  }

  p {
    margin-bottom: 0;
  }
}

// Default styles for topBottom articles
.top {
  // top styles
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  text-align: center;

  p {
    margin:  0 0 2rem 0;
  }
}

// Default fault style for topBottom articles
.bottom {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  button {
    align-self: center;
  }

  p {
    margin-top: 0;
  }

  p:last-of-type {
    margin-bottom: 0;
  }
}

.paddingSmall {
  display: flex;
  flex-direction: column;
  padding: 2rem 2.5rem;

  .title {
    text-align: center;
  }

  p:first-of-type {
    text-align: center;
  }

  dl {
    text-align: center;
    color: color(text);
  }

  button {
    align-self: center;
  }

  p {
    margin-top: 1rem;
  }

  p:last-of-type {
    margin-bottom: 0;
  }

  a {
    margin-top: 1rem;
    align-self: center;
  }
}

//////////////////////
// UTILITY CLASSES
/////////////////////

.alignLeft {
  display: flex;
  justify-content: flex-start;
  align-items: center;

  p {
    span {
      font-size: 1.6rem;
      font-weight: 600;
      text-transform: uppercase;
      color: color(text);
    }
  }

  @include respond(tab-land) {
    justify-content: center; 
  }
}

// Aligns items in the center
.alignCenter {
  display: flex;
  flex-direction: column;
  padding: 2rem;

  div {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
  }

  p:first-of-type {
    margin-top: 0;
    text-align: center;
  }

  dl {
    margin-top: 1rem;
    margin-bottom: 0;
    text-align: center;
    color: color(text);
  }

  button {

    display: block;
    margin: 0 auto;
  }

  p {
    margin-top: 1rem;
    text-align: center;
  }

  p:last-of-type {
    margin-bottom: 0;
  }

  a {
    margin-top: 1rem;
    align-self: center;
  }
}

///////////////////////////
// Spans 
// classes used to define how much space content uses
//////////////////////////
.span1 {
  grid-column: span 1;
}

.span2 {
  grid-column: span 2;
}

.span3 {
  grid-column: span 3;
}

.span4 {
  grid-column: span 4;
}

.span5 {
  grid-column: span 5;
}

.span6 {
  grid-column: span 6;
}

.span7 {
  grid-column: span 7;
}

.span8 {
  grid-column: span 8;
}

.span9 {
  grid-column: span 9;
}

.span10 {
  grid-column: span 10;
}

.span11 {
  grid-column: span 11;
}

.span12 {
  grid-column: span 12;
}

///////////////////////
// SPACING
///////////////////////

.paddingLarge {
  padding: $padding-3 $padding-10;

  article {
    width: 100%;
  }

  @include respond(tab-land) {
    padding: 2rem 8rem;
  }

  @include respond(phone) {
    padding: 2rem;
  }
  
}

.padding2 {
  padding: $padding-2;
}

.topSmPadd {
  @include respond(phone) { // width < 600?
    padding-top: 1rem;
  }
}

.bottomSmPadd {
  @include respond(phone) { // width < 600?
    padding-bottom: 1rem;
  }
}


///////////////////////
// Background/Border
///////////////////////

.noBackground {
  background: transparent;
}

.removeBorder {
  border: none;
}

.addBorder {
  border: 1px solid color(text);
}